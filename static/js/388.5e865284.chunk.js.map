{"version":3,"file":"static/js/388.5e865284.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.style.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  border-radius: 5px;\n  border: solid 1px #000000;\n  padding: 20px;\n`;\n","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = store => store.filter;\n","import { useState } from 'react';\nimport { Form } from './ContactForm.style';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { getContacts } from 'redux/selectors';\nimport { Notify } from 'notiflix';\nimport { Button, TextField } from '@mui/material';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const isContactExist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isContactExist) {\n      Notify.failure(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, phone })).then(() => {\n      Notify.success(`Contact ${name} was added successfully`);\n      setName('');\n      setPhone('');\n    });\n  };\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <div>\n        <Form onSubmit={onFormSubmit}>\n          <TextField\n            id=\"outlined-name-input\"\n            label=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            required\n            inputProps={{\n              pattern: \"^[a-zA-Z'\\\\s\\\\-]+$\",\n              title:\n                'Name may contain only letters, apostrophe, dash and spaces.',\n            }}\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n\n          <TextField\n            id=\"outlined-number-input\"\n            label=\"Number\"\n            type=\"tel\"\n            name=\"number\"\n            inputProps={{\n              pattern: '^\\\\+?[0-9\\\\s\\\\-()]+$',\n              title:\n                'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n            }}\n            required\n            value={phone}\n            onChange={e => setPhone(e.target.value)}\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"success\">\n            Add contact\n          </Button>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Element = styled.li`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  border: solid 1px #000000;\n  padding: 20px;\n  flex-basis: calc((100% - 65px * 4) / 4);\n  min-width: 230px;\n  box-sizing: content-box;\n  overflow: hidden;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nexport const ErrorTitle = styled.h3`\n  margin-bottom: 20px;\n  margin-top: 20px;\n`;\n\nexport const ErrorText = styled.p`\n  margin: 0;\n  font-size: 30px;\n  color: #8b8b8bdd;\n`;\n\nexport const ErrorWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.p`\n  margin: 20px;\n`;\n\nexport const Button = styled.button`\n  background-color: #e4183a;\n  border: 1px solid rgba(27, 31, 35, 0.15);\n  border-radius: 6px;\n\n  color: #fff;\n  cursor: pointer;\n\n  font-family: -apple-system, system-ui, 'Segoe UI', Helvetica, Arial,\n    sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji';\n  font-size: 14px;\n  font-weight: 600;\n  padding: 6px 16px;\n\n  &:hover,\n  &:disabled {\n    background-color: #ad1d35;\n  }\n\n  &:focus {\n    box-shadow: rgba(187, 17, 40, 0.4) 0 0 0 3px;\n    outline: none;\n  }\n`;\n\nexport const ContactWrapper = styled.div`\n  text-align: center;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { Item, Button, ContactWrapper } from './Contact.styled';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Notify } from 'notiflix';\n\nconst Contact = ({ contact: { name, number, id } }) => {\n  const [isDeleting, setIsDeleting] = useState(false);\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    setIsDeleting(true);\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(payload =>\n        Notify.success(`Ð¡ontact ${payload.name} was successfully deleted`)\n      );\n  };\n\n  return (\n    <>\n      <ContactWrapper>\n        <Item>{name}:</Item>\n        <Item> {number}</Item>\n      </ContactWrapper>\n      <Button type=\"button\" onClick={handleDelete} disabled={isDeleting}>\n        {isDeleting ? 'Deleting...' : 'Delete'}\n      </Button>\n    </>\n  );\n};\n\nexport default Contact;\n\nContact.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n","import {\n  Element,\n  ErrorText,\n  ErrorTitle,\n  ErrorWrapper,\n  List,\n} from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getError, getFilter } from 'redux/selectors';\nimport Contact from 'components/Contact/Contact';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const isError = useSelector(getError);\n\n  const getFilteredContact = (contacts, filter) => {\n    return contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(filter.toLowerCase());\n    });\n  };\n\n  const filteredContacts = getFilteredContact(contacts, filter);\n\n  return (\n    <List>\n      {isError ? (\n        <ErrorWrapper>\n          <ErrorTitle>Opsss... Something went wrong. Try later</ErrorTitle>\n          <ErrorText>{isError}</ErrorText>\n        </ErrorWrapper>\n      ) : (\n        filteredContacts.map(contact => (\n          <Element key={contact.id}>\n            <Contact contact={contact} />\n          </Element>\n        ))\n      )}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterForm = styled.label`\n  display: flex;\n`;\n\nexport const Input = styled.input`\n  font-size: inherit;\n  margin: 0;\n  line-height: 1.15;\n  text-align: center;\n  margin-left: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterForm, Input } from './Filter.styled';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { getFilter } from '../../redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const updateFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  const filter = useSelector(getFilter);\n\n  return (\n    <>\n      <h2>Contacts</h2>\n      <FilterForm>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          onChange={updateFilter}\n          value={filter}\n          placeholder=\"Who are we looking for?\"\n        />\n      </FilterForm>\n    </>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.title = 'Contacts';\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","getContacts","state","contacts","items","getError","error","getFilter","store","filter","useState","name","setName","phone","setPhone","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","find","contact","toLowerCase","Notify","addContact","then","TextField","id","label","type","required","inputProps","pattern","title","value","onChange","target","Button","variant","color","Element","List","ErrorTitle","ErrorText","ErrorWrapper","Item","ContactWrapper","number","isDeleting","setIsDeleting","onClick","deleteContact","unwrap","payload","disabled","isError","filteredContacts","includes","getFilteredContact","map","FilterForm","Input","event","setFilter","placeholder","useEffect","document","fetchContacts"],"sourceRoot":""}